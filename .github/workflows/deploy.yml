name: Deploy Rails App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }}:latest . --build-arg RAILS_ENV=production --build-arg SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

    - name: Push Image to ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user # or your configured username
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.ECR_REPOSITORY }}:latest
          docker stop my-rails-app || true
          docker rm my-rails-app || true
          docker run -d --name my-rails-app -p 80:3000 ${{ secrets.ECR_REPOSITORY }}:latest
          docker run -d -p 80:3000 -e DB_HOST=${{ secrets.DB_HOST }} -e DB_PORT=${{ secrets.DB_PORT }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e DB_NAME=${{ secrets.DB_NAME }} -e RAILS_ENV=production -e RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}  ${{ secrets.ECR_REPOSITORY }}:latest
